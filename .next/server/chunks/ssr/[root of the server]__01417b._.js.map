{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nexport const prisma = new PrismaClient();\r\n\r\n//creating this prisma client to interact with our models and db."],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY,IAEtC,iEAAiE"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/comments/comment-list.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\r\nimport { Prisma } from \"@prisma/client\";\r\n\r\ntype CommentListProps = {\r\n  comments: Prisma.CommentGetPayload<{\r\n    include: {\r\n      author: {\r\n        select: {\r\n          name: true;\r\n          email: true;\r\n          imageUrl: true;\r\n        };\r\n      };\r\n    };\r\n  }>[];\r\n};\r\n\r\nconst CommentList: React.FC<CommentListProps> = ({ comments }) => {\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {comments.map((comment) => (\r\n        <div key={comment.id} className=\"flex gap-4\">\r\n          <Avatar className=\"h-10 w-10\">\r\n            <AvatarImage src={comment.author.imageUrl || \"\"} />\r\n            <AvatarFallback>{comment.author.name}</AvatarFallback>\r\n          </Avatar>\r\n          <div className=\"flex-1\">\r\n            <div className=\"mb-2\">\r\n              <span className=\"font-medium\">{comment.author.name}</span>\r\n              <span className=\"text-sm ml-2\">{comment.createdAt.toDateString()}</span>\r\n            </div>\r\n            <p> {comment.body} </p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"],"names":[],"mappings":";;;;AACA;;;AAiBA,MAAM,cAA0C,CAAC,EAAE,QAAQ,EAAE;IAC3D,qBACE,8OAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;gBAAqB,WAAU;;kCAC9B,8OAAC,2HAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,8OAAC,2HAAA,CAAA,cAAW;gCAAC,KAAK,QAAQ,MAAM,CAAC,QAAQ,IAAI;;;;;;0CAC7C,8OAAC,2HAAA,CAAA,iBAAc;0CAAE,QAAQ,MAAM,CAAC,IAAI;;;;;;;;;;;;kCAEtC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAe,QAAQ,MAAM,CAAC,IAAI;;;;;;kDAClD,8OAAC;wCAAK,WAAU;kDAAgB,QAAQ,SAAS,CAAC,YAAY;;;;;;;;;;;;0CAEhE,8OAAC;;oCAAE;oCAAE,QAAQ,IAAI;oCAAC;;;;;;;;;;;;;;eAVZ,QAAQ,EAAE;;;;;;;;;;AAgB5B;uCAEe"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-zinc-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-zinc-900 text-zinc-50 shadow hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n        destructive:\n          \"bg-red-500 text-zinc-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-zinc-200 bg-white shadow-sm hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n        secondary:\n          \"bg-zinc-100 text-zinc-900 shadow-sm hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n        ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n        link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8UACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/articles/like-button.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button } from '../ui/button';\r\nimport { Bookmark, Share2, ThumbsUp } from 'lucide-react';\r\n\r\nconst LikeButton = () => {\r\n    return (\r\n        <div className='flex gap-4 mb-12 border-t pt-8'>\r\n            <form action=\"\">\r\n                <Button variant={'ghost'} className='gap-2'>\r\n                    <ThumbsUp className='h-5 w-5'/> 0\r\n                </Button>\r\n            </form>\r\n            <Button variant={'ghost'} className='gap-2'>\r\n                <Bookmark className='h-5 w-5'/>\r\n            </Button>\r\n            <Button variant={'ghost'} className='gap-2'>\r\n                <Share2 className='h-5 w-5'/>\r\n            </Button>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LikeButton;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;;;;AAEA,MAAM,aAAa;IACf,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAK,QAAO;0BACT,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBAAC,SAAS;oBAAS,WAAU;;sCAChC,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAAW;;;;;;;;;;;;0BAGvC,8OAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAS,WAAU;0BAChC,cAAA,8OAAC,0MAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAExB,8OAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAS,WAAU;0BAChC,cAAA,8OAAC,0MAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAIlC;uCAEe"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/comments/comment-input.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/comments/comment-input.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/comments/comment-input.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/comments/comment-input.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/comments/comment-input.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/comments/comment-input.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/src/app/dashboard/articles/article-detail-page.tsx"],"sourcesContent":["import CommentList from \"@/components/comments/comment-list\";\r\nimport LikeButton from \"@/components/articles/like-button\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Prisma } from \"@prisma/client\";\r\nimport React from \"react\";\r\nimport CommentInput from \"@/components/comments/comment-input\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\ntype ArticleDetailPageProps = {\r\n  article: Prisma.ArticleGetPayload<{\r\n    include: {\r\n      author: {\r\n        select: {\r\n          name: true;\r\n          email: true;\r\n          imageUrl: true;\r\n        };\r\n      };\r\n    };\r\n  }>;\r\n};\r\n\r\nconst ArticleDetailPage: React.FC<ArticleDetailPageProps> = async ({ article }) => {\r\n\r\n  const comments = await prisma.comment.findMany({\r\n    where:{articleId:article.id},\r\n    include:{\r\n      author:{\r\n        select:{\r\n          name:true,\r\n          email:true,\r\n          imageUrl:true\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <main className=\"container mx-auto py-12 px-4 sm:px-6 lg:px-8\">\r\n        <article className=\"mx-auto max-w-3xl\">\r\n          <header className=\"mb-12\">\r\n            <div className=\"flex flex-wrap gap-2 mb-4\">\r\n              <span className=\"px-3 py-1 text-sm\">web-development</span>\r\n            </div>\r\n            <h1 className=\"text-4xl font-bold mb-4\"> How to learn web dev </h1>\r\n            <div className=\"flex items-center gap-4\">\r\n                <Avatar>\r\n                    <AvatarImage src={article.author.imageUrl || \"\"}/>\r\n                    <AvatarFallback>CN</AvatarFallback>\r\n                </Avatar>\r\n                <div>\r\n                    <p className=\"font-medium\"> {article.author.name} </p>\r\n                    <p className=\"text-sm italic\"> {article.createdAt.toDateString()} </p>\r\n                </div>\r\n            </div>\r\n          </header>\r\n          <section className=\"mb-12 max-w-none\" dangerouslySetInnerHTML={{__html:article.content}}/>\r\n          {/* Article action button */}\r\n          <LikeButton/>\r\n\r\n          <CommentInput articleId={article.id}/>\r\n\r\n          {/* Comment section */}\r\n          <CommentList comments={comments}/>\r\n        </article>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleDetailPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAGA;AACA;;;;;;;AAgBA,MAAM,oBAAsD,OAAO,EAAE,OAAO,EAAE;IAE5E,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC7C,OAAM;YAAC,WAAU,QAAQ,EAAE;QAAA;QAC3B,SAAQ;YACN,QAAO;gBACL,QAAO;oBACL,MAAK;oBACL,OAAM;oBACN,UAAS;gBACX;YACF;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAO,WAAU;;0CAChB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAK,WAAU;8CAAoB;;;;;;;;;;;0CAEtC,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,2HAAA,CAAA,SAAM;;0DACH,8OAAC,2HAAA,CAAA,cAAW;gDAAC,KAAK,QAAQ,MAAM,CAAC,QAAQ,IAAI;;;;;;0DAC7C,8OAAC,2HAAA,CAAA,iBAAc;0DAAC;;;;;;;;;;;;kDAEpB,8OAAC;;0DACG,8OAAC;gDAAE,WAAU;;oDAAc;oDAAE,QAAQ,MAAM,CAAC,IAAI;oDAAC;;;;;;;0DACjD,8OAAC;gDAAE,WAAU;;oDAAiB;oDAAE,QAAQ,SAAS,CAAC,YAAY;oDAAG;;;;;;;;;;;;;;;;;;;;;;;;;kCAI3E,8OAAC;wBAAQ,WAAU;wBAAmB,yBAAyB;4BAAC,QAAO,QAAQ,OAAO;wBAAA;;;;;;kCAEtF,8OAAC,yIAAA,CAAA,UAAU;;;;;kCAEX,8OAAC,2IAAA,CAAA,UAAY;wBAAC,WAAW,QAAQ,EAAE;;;;;;kCAGnC,8OAAC,0IAAA,CAAA,UAAW;wBAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;AAKjC;uCAEe"}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/src/app/articles/%5Bid%5D/page.tsx"],"sourcesContent":["import { prisma } from '@/lib/prisma';\r\nimport React from 'react';\r\nimport ArticleDetailPage from '../../dashboard/articles/article-detail-page';\r\n\r\ntype ArticleDetailPageProps = {\r\n    params: Promise<{id:string}>\r\n}\r\n\r\nconst page : React.FC<ArticleDetailPageProps> = async ({params}) => {\r\n    const id = (await params).id;\r\n    const article = await prisma.article.findUnique({\r\n        where: {id},\r\n        include: {\r\n            author: {\r\n                select: {\r\n                    name: true,\r\n                    email: true,\r\n                    imageUrl: true,\r\n                },\r\n            },\r\n        },\r\n    });\r\n    if (!article) {\r\n        return <h1> Article not found! </h1>\r\n    }\r\n    return (\r\n        <div>\r\n            <ArticleDetailPage article={article}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default page;\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAMA,MAAM,OAA0C,OAAO,EAAC,MAAM,EAAC;IAC3D,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;IAC5B,MAAM,UAAU,MAAM,6GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QAC5C,OAAO;YAAC;QAAE;QACV,SAAS;YACL,QAAQ;gBACJ,QAAQ;oBACJ,MAAM;oBACN,OAAO;oBACP,UAAU;gBACd;YACJ;QACJ;IACJ;IACA,IAAI,CAAC,SAAS;QACV,qBAAO,8OAAC;sBAAG;;;;;;IACf;IACA,qBACI,8OAAC;kBACG,cAAA,8OAAC,iKAAA,CAAA,UAAiB;YAAC,SAAS;;;;;;;;;;;AAGxC;uCAEe"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/create-comment.ts"],"sourcesContent":["\"use server\"\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport {z} from \"zod\";\r\n\r\nconst createCommentSchema = z.object({\r\n    body:z.string().min(1)\r\n})\r\ntype CreateCommentFormState = {\r\n    errors:{\r\n        body?: string[],\r\n        formErrors?: string[]\r\n    }\r\n}\r\nexport const createComment = async (articleId: string, prevState:CreateCommentFormState, formData:FormData) : Promise<CreateCommentFormState> => {\r\n    const result = createCommentSchema.safeParse({body:formData.get('body')});\r\n    if(!result.success){\r\n        return{\r\n            errors: result.error.flatten().fieldErrors\r\n        }\r\n    }\r\n    const {userId} = await auth();\r\n    if (!userId) {\r\n        return{\r\n            errors:{\r\n                formErrors:['You must login first!']\r\n            }\r\n        }\r\n    }\r\n\r\n    const existingUser = await prisma.user.findUnique({where:{clerkUserId:userId}});\r\n    if(!existingUser) {\r\n        return{\r\n            errors:{\r\n                formErrors:['User not found.']\r\n            }\r\n        }\r\n    }\r\n\r\n    //validation done, now create comment\r\n    try {\r\n        await prisma.comment.create({\r\n            data:{\r\n                body:result.data.body,\r\n                authorId:existingUser.id,\r\n                articleId\r\n            }\r\n        });\r\n    } catch (error:unknown) {\r\n        if(error instanceof Error) {\r\n            return({\r\n                errors:{\r\n                    formErrors:['Internal server error.']\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    revalidatePath(`article/${articleId}`)\r\n    return {errors:{}}\r\n}"],"names":[],"mappings":";;;;;AACA;AAEA;;AACA;AAFA;;;;;;;AAIA,MAAM,sBAAsB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,MAAK,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AACxB;AAOO,MAAM,uCAAW,GAAX,gBAAgB,OAAO,WAAmB,WAAkC;IACrF,MAAM,SAAS,oBAAoB,SAAS,CAAC;QAAC,MAAK,SAAS,GAAG,CAAC;IAAO;IACvE,IAAG,CAAC,OAAO,OAAO,EAAC;QACf,OAAM;YACF,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;QAC9C;IACJ;IACA,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC1B,IAAI,CAAC,QAAQ;QACT,OAAM;YACF,QAAO;gBACH,YAAW;oBAAC;iBAAwB;YACxC;QACJ;IACJ;IAEA,MAAM,eAAe,MAAM,6GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAAC,OAAM;YAAC,aAAY;QAAM;IAAC;IAC7E,IAAG,CAAC,cAAc;QACd,OAAM;YACF,QAAO;gBACH,YAAW;oBAAC;iBAAkB;YAClC;QACJ;IACJ;IAEA,qCAAqC;IACrC,IAAI;QACA,MAAM,6GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YACxB,MAAK;gBACD,MAAK,OAAO,IAAI,CAAC,IAAI;gBACrB,UAAS,aAAa,EAAE;gBACxB;YACJ;QACJ;IACJ,EAAE,OAAO,OAAe;QACpB,IAAG,iBAAiB,OAAO;YACvB,OAAO;gBACH,QAAO;oBACH,YAAW;wBAAC;qBAAyB;gBACzC;YACJ;QACJ;IACJ;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,QAAQ,EAAE,WAAW;IACrC,OAAO;QAAC,QAAO,CAAC;IAAC;AACrB;;;IA9Ca;;AAAA,+OAAA"}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}