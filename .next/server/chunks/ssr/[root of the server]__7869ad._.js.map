{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/articles/edit-article-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/articles/edit-article-page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/articles/edit-article-page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/articles/edit-article-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/articles/edit-article-page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/articles/edit-article-page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nexport const prisma = new PrismaClient();\r\n\r\n//creating this prisma client to interact with our models and db."],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY,IAEtC,iEAAiE"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/src/app/dashboard/articles/%5Bid%5D/edit/page.tsx"],"sourcesContent":["import EditArticlePage from \"@/components/articles/edit-article-page\";\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport React from \"react\";\r\n\r\ntype EditArticleParams = {\r\n  params: Promise<{ id: string }>;\r\n};\r\n\r\nconst page: React.FC<EditArticleParams> = async ({ params }) => {\r\n  const id = (await params).id;\r\n  const article = await prisma.article.findUnique({\r\n    where: { id },\r\n  });\r\n  if (!article) return <h1> Article not found for the given id: {id}</h1>;\r\nreturn (\r\n    <div>\r\n      <EditArticlePage article={article} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default page;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,OAAoC,OAAO,EAAE,MAAM,EAAE;IACzD,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;IAC5B,MAAM,UAAU,MAAM,6GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QAC9C,OAAO;YAAE;QAAG;IACd;IACA,IAAI,CAAC,SAAS,qBAAO,8OAAC;;YAAG;YAAsC;;;;;;;IACjE,qBACI,8OAAC;kBACC,cAAA,8OAAC,kJAAA,CAAA,UAAe;YAAC,SAAS;;;;;;;;;;;AAGhC;uCAEe"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/edit-article.ts"],"sourcesContent":["\"use server\"; //directive\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { v2 as cloudinary, UploadApiResponse } from \"cloudinary\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\n//declaring the configurations from env\r\ncloudinary.config({\r\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n  api_key: process.env.CLOUDINARY_API_KEY,\r\n  api_secret: process.env.CLOUDINARY_API_SECRET,\r\n});\r\n//schema for the articles using Zod\r\nconst createArticleSchema = z.object({\r\n  title: z.string().min(3).max(100),\r\n  category: z.string().min(3).max(50),\r\n  content: z.string().min(10),\r\n});\r\n//type-making the articles\r\ntype CreateArticlesFormState = {\r\n  errors: {\r\n    title?: string[];\r\n    category?: string[];\r\n    ftdImg?: string[];\r\n    content?: string[];\r\n    formErrors?: string[];\r\n  };\r\n};\r\n\r\nexport const editArticle = async (\r\n  articleId: string,\r\n  prevState: CreateArticlesFormState,\r\n  formData: FormData\r\n): Promise<CreateArticlesFormState> => {\r\n  const result = createArticleSchema.safeParse({\r\n    title: formData.get(\"title\"),\r\n    category: formData.get(\"category\"),\r\n    content: formData.get(\"content\"),\r\n  });\r\n\r\n  if (!result.success) {\r\n    console.log(\"Validation failed:\", result.error.flatten().fieldErrors);\r\n    return {\r\n      errors: result.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { userId } = await auth();\r\n  if (!userId) {\r\n    console.log(\"User authentication failed\");\r\n    return {\r\n      errors: {\r\n        formErrors: [\"You have to login first\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  //finding if the article exists\r\n  const existingArticle = await prisma.article.findUnique({\r\n    where: { id: articleId },\r\n  });\r\n  if (!existingArticle) {\r\n    return {\r\n      errors: { formErrors: [\"Article Not Found\"] },\r\n    };\r\n  }\r\n\r\n  //checking if the user exists who is creating\r\n  const existingUser = await prisma.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n  if (!existingUser || existingArticle.authorId !== existingUser.id) {\r\n    return {\r\n      errors: {\r\n        formErrors: [\"User not found. Please register first.\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  //editing article finally\r\n\r\n  let imageUrl = existingArticle?.featuredImage;\r\n\r\n  //image validation\r\n  const imageFile = formData.get(\"ftdImg\") as File | null;\r\n  if (imageFile && imageFile.name !== \"undefined\") {\r\n    try {\r\n      //converting img to a buffer\r\n      const arrayBuffer = await imageFile.arrayBuffer();\r\n      const buffer = Buffer.from(arrayBuffer);\r\n      //uploading to cloudinary\r\n      const uploadResponse: UploadApiResponse | undefined = await new Promise(\r\n        (resolve, reject) => {\r\n          const uploadStream = cloudinary.uploader.upload_stream(\r\n            { resource_type: \"auto\" },\r\n            (error, result) => {\r\n              if (error) {\r\n                reject(error);\r\n              } else {\r\n                resolve(result);\r\n              }\r\n            }\r\n          );\r\n          uploadStream.end(buffer);\r\n        }\r\n      );\r\n      if (uploadResponse?.secure_url) {\r\n        imageUrl = uploadResponse.secure_url;\r\n      } else {\r\n        return {\r\n          errors: {\r\n            ftdImg: [\"Failed to upload image.\"],\r\n          },\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        errors: {\r\n          formErrors: [\"Error uploading image\"],\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  if (!imageUrl) {\r\n    console.log(\"Image upload failed\");\r\n    return {\r\n      errors: {\r\n        ftdImg: [\"Failed to upload image. Please try again.\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    await prisma.article.update({\r\n      where: { id: articleId },\r\n      data: {\r\n        title: result.data.title,\r\n        category: result.data.category,\r\n        content: result.data.content,\r\n        featuredImage: imageUrl,\r\n      },\r\n    });\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      console.error(\"Database error:\", error);\r\n      return {\r\n        errors: {\r\n          formErrors: [error.message],\r\n        },\r\n      };\r\n    } else {\r\n      return {\r\n        errors: {\r\n          formErrors: [\"Some internal server error occured.\"],\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  revalidatePath(\"/dashboard\"); //refreshes and updates the data\r\n  redirect(\"/dashboard\");\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}