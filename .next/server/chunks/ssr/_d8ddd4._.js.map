{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,sMAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,QAAQ;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4FACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAgB,QAAQ,CAAC,WAAW"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-zinc-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-zinc-900 text-zinc-50 shadow hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n        destructive:\n          \"bg-red-500 text-zinc-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-zinc-200 bg-white shadow-sm hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n        secondary:\n          \"bg-zinc-100 text-zinc-900 shadow-sm hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n        ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n        link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8UACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/like-dislike.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\nexport const likeDislikeToggle = async (articleId: string) => {\r\n  const { userId } = await auth();\r\n  if (!userId) {\r\n    throw new Error(\"You must be logged in!\");\r\n  }\r\n\r\n  const user = await prisma.user.findUnique({\r\n    where: {\r\n      clerkUserId: userId,\r\n    },\r\n  });\r\n  if (!user) {\r\n    throw new Error(\"User does not exist.\");\r\n  }\r\n\r\n  //checls if user already has liked an their id is there\r\n  const existingLike = await prisma.like.findFirst({\r\n    where: {\r\n      articleId,\r\n      userId: user.id,\r\n    },\r\n  });\r\n  let updatedLikeCount: number;\r\n  let newIsLiked: boolean;\r\n  if (existingLike) {\r\n    // User has liked before → Remove like\r\n    await prisma.like.delete({ where: { id: existingLike.id } });\r\n    newIsLiked = false;\r\n  } else {\r\n    // User hasn't liked before → Add like\r\n    await prisma.like.create({\r\n      data: { articleId, userId: user.id },\r\n    });\r\n    newIsLiked = true;\r\n  }\r\n\r\n  updatedLikeCount = await prisma.like.count({\r\n    where:{\r\n        articleId\r\n    }\r\n  });\r\n\r\n  revalidatePath(`/articles/${articleId}`);\r\n\r\n  return { likeCount: updatedLikeCount, isLiked: newIsLiked };\r\n\r\n};\r\n"],"names":[],"mappings":";;;;;IAMa"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/articles/like-button.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useOptimistic, useTransition } from \"react\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Bookmark, Share2, ThumbsUp } from \"lucide-react\";\r\nimport { Like } from \"@prisma/client\";\r\nimport { likeDislikeToggle } from \"@/actions/like-dislike\";\r\n\r\ntype LikeButtonProps = {\r\n  articleId: string;\r\n  likes: Like[];\r\n  isLiked: boolean;\r\n};\r\n\r\nconst LikeButton: React.FC<LikeButtonProps> = ({\r\n  articleId,\r\n  likes,\r\n  isLiked,\r\n}) => {\r\n  //optimistic method to local update and later db update\r\n  const [optimisticLike, setOptimisticLike] = useOptimistic(likes.length);\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const handleLikeDislike = async () => {\r\n    startTransition(async () => {\r\n      setOptimisticLike(isLiked ? optimisticLike - 1 : optimisticLike + 1); //Ui update client side\r\n      await likeDislikeToggle(articleId);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-4 mb-12 border-t pt-8\">\r\n      <form action={handleLikeDislike}>\r\n        <Button\r\n          disabled={isPending}\r\n          variant={\"ghost\"}\r\n          className=\"gap-2\"\r\n          type=\"submit\"\r\n        >\r\n          <ThumbsUp className=\"h-5 w-5\" /> {optimisticLike}\r\n        </Button>\r\n      </form>\r\n      <Button variant={\"ghost\"} className=\"gap-2\">\r\n        <Bookmark className=\"h-5 w-5\" />\r\n      </Button>\r\n      <Button variant={\"ghost\"} className=\"gap-2\">\r\n        <Share2 className=\"h-5 w-5\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikeButton;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AAFA;AAAA;AAAA;AAJA;;;;;;AAcA,MAAM,aAAwC,CAAC,EAC7C,SAAS,EACT,KAAK,EACL,OAAO,EACR;IACC,uDAAuD;IACvD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,MAAM;IACtE,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,oBAAoB;QACxB,gBAAgB;YACd,kBAAkB,UAAU,iBAAiB,IAAI,iBAAiB,IAAI,uBAAuB;YAC7F,MAAM,CAAA,GAAA,0HAAA,CAAA,oBAAiB,AAAD,EAAE;QAC1B;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,QAAQ;0BACZ,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBACL,UAAU;oBACV,SAAS;oBACT,WAAU;oBACV,MAAK;;sCAEL,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAAY;wBAAE;;;;;;;;;;;;0BAGtC,8OAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAS,WAAU;0BAClC,cAAA,8OAAC,0MAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAEtB,8OAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAS,WAAU;0BAClC,cAAA,8OAAC,0MAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI1B;uCAEe"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-zinc-200 bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,odACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/create-comment.ts"],"sourcesContent":["\"use server\"\r\nimport { prisma } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport {z} from \"zod\";\r\n\r\nconst createCommentSchema = z.object({\r\n    body:z.string().min(1)\r\n})\r\ntype CreateCommentFormState = {\r\n    errors:{\r\n        body?: string[],\r\n        formErrors?: string[]\r\n    }\r\n}\r\nexport const createComment = async (articleId: string, prevState:CreateCommentFormState, formData:FormData) : Promise<CreateCommentFormState> => {\r\n    const result = createCommentSchema.safeParse({body:formData.get('body')});\r\n    if(!result.success){\r\n        return{\r\n            errors: result.error.flatten().fieldErrors\r\n        }\r\n    }\r\n    const {userId} = await auth();\r\n    if (!userId) {\r\n        return{\r\n            errors:{\r\n                formErrors:['You must login first!']\r\n            }\r\n        }\r\n    }\r\n\r\n    const existingUser = await prisma.user.findUnique({where:{clerkUserId:userId}});\r\n    if(!existingUser) {\r\n        return{\r\n            errors:{\r\n                formErrors:['User not found.']\r\n            }\r\n        }\r\n    }\r\n\r\n    //validation done, now create comment\r\n    try {\r\n        await prisma.comment.create({\r\n            data:{\r\n                body:result.data.body,\r\n                authorId:existingUser.id,\r\n                articleId\r\n            }\r\n        });\r\n    } catch (error:unknown) {\r\n        if(error instanceof Error) {\r\n            return({\r\n                errors:{\r\n                    formErrors:['Internal server error.']\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    revalidatePath(`article/${articleId}`)\r\n    return {errors:{}}\r\n}"],"names":[],"mappings":";;;;;IAea"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/comments/comment-input.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useActionState } from \"react\";\r\nimport { Input } from \"../ui/input\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\r\nimport { Button } from \"../ui/button\";\r\nimport { createComment } from \"@/actions/create-comment\";\r\n\r\ntype CommentInputProps = {\r\n  articleId: string;\r\n};\r\n\r\nconst CommentInput: React.FC<CommentInputProps> = ({ articleId }) => {\r\n  const [formState, action, isPending] = useActionState(\r\n    createComment.bind(null, articleId),\r\n    { errors: {} }\r\n  );\r\n  return (\r\n    <form action={action} className=\"mb-8\">\r\n      <div className=\"flex gap-4\">\r\n        <Avatar>\r\n          <AvatarImage src=\"\" />\r\n          <AvatarFallback> CN </AvatarFallback>\r\n        </Avatar>\r\n        <div className=\"flex-1\">\r\n          <Input type=\"text\" name=\"body\" placeholder=\"Add a comment...\" />\r\n          {formState.errors.body && (\r\n            <p className=\"text-red-600 text-sm\">{formState.errors.body}</p>\r\n          )}\r\n          <div className=\"mt-4 flex justify-end\">\r\n            <Button type=\"submit\" disabled={isPending}>\r\n              {isPending ? \"Loading...\" : \"Post Comment\"}\r\n            </Button>\r\n          </div>\r\n          {formState.errors.formErrors && (\r\n            <div className=\"p-2 border-red-600 bg-red-100\">\r\n              {formState.errors.formErrors[0]}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentInput;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAYA,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IAC9D,MAAM,CAAC,WAAW,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAClD,4HAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM,YACzB;QAAE,QAAQ,CAAC;IAAE;IAEf,qBACE,8OAAC;QAAK,QAAQ;QAAQ,WAAU;kBAC9B,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,2HAAA,CAAA,SAAM;;sCACL,8OAAC,2HAAA,CAAA,cAAW;4BAAC,KAAI;;;;;;sCACjB,8OAAC,2HAAA,CAAA,iBAAc;sCAAC;;;;;;;;;;;;8BAElB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,0HAAA,CAAA,QAAK;4BAAC,MAAK;4BAAO,MAAK;4BAAO,aAAY;;;;;;wBAC1C,UAAU,MAAM,CAAC,IAAI,kBACpB,8OAAC;4BAAE,WAAU;sCAAwB,UAAU,MAAM,CAAC,IAAI;;;;;;sCAE5D,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,UAAU;0CAC7B,YAAY,eAAe;;;;;;;;;;;wBAG/B,UAAU,MAAM,CAAC,UAAU,kBAC1B,8OAAC;4BAAI,WAAU;sCACZ,UAAU,MAAM,CAAC,UAAU,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAO7C;uCAEe"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}