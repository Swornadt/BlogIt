{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/src/app/dashboard/articles/create/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/articles/create/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/articles/create/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/src/app/dashboard/articles/create/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/articles/create/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/articles/create/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nexport const prisma = new PrismaClient();\r\n\r\n//creating this prisma client to interact with our models and db."],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY,IAEtC,iEAAiE"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/create-article.ts"],"sourcesContent":["\"use server\"; //directive\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport {v2 as cloudinary, UploadApiResponse} from \"cloudinary\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\n//declaring the configurations from env\r\ncloudinary.config({\r\n    cloud_name:process.env.CLOUDINARY_CLOUD_NAME,\r\n    api_key:process.env.CLOUDINARY_API_KEY,\r\n    api_secret:process.env.CLOUDINARY_API_SECRET\r\n})\r\n//schema for the articles using Zod\r\nconst createArticleSchema = z.object({\r\n  title: z.string().min(3).max(100),\r\n  category: z.string().min(3).max(50),\r\n  content: z.string().min(10),\r\n});\r\n//type-making the articles\r\ntype CreateArticlesFormState = {\r\n  errors: {\r\n    title?: string[];\r\n    category?: string[];\r\n    ftdImg?: string[];\r\n    content?: string[];\r\n    formErrors?: string[];\r\n  };\r\n};\r\n\r\nexport const createArticle = async (\r\n    prevState: CreateArticlesFormState,\r\n    formData: FormData\r\n  ): Promise<CreateArticlesFormState> => {\r\n    \r\n    const result = createArticleSchema.safeParse({\r\n      title: formData.get(\"title\"),\r\n      category: formData.get(\"category\"),\r\n      content: formData.get(\"content\"), \r\n    });\r\n  \r\n    if (!result.success) {\r\n        console.log(\"Validation failed:\", result.error.flatten().fieldErrors);\r\n      return {\r\n        errors: result.error.flatten().fieldErrors,\r\n      };\r\n    }\r\n\r\n  const { userId } = await auth();\r\n  if (!userId) {\r\n    console.log(\"User authentication failed\");\r\n    return {\r\n      errors: {\r\n        formErrors: [\"You have to login first\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  //checking if the user exists who is creating\r\n  const existingUser = await prisma.user.findUnique({\r\n    where:{clerkUserId:userId}\r\n  });\r\n  if(!existingUser) {\r\n    return {\r\n        errors:{\r\n            formErrors:['User not found. Please register first.']\r\n        }\r\n    }\r\n  }\r\n\r\n  //creating article finally\r\n\r\n  //image validation\r\n  const imageFile = formData.get('ftdImg') as File | null;\r\n  if(!imageFile || imageFile.name === \"undefined\") {\r\n    console.log(\"Insert a photo\")\r\n    return {\r\n        errors: {\r\n            ftdImg: ['Image file is required']\r\n        }\r\n    }\r\n  }\r\n//converting img to a buffer\r\nconst arrayBuffer = await imageFile.arrayBuffer();\r\nconst buffer = Buffer.from(arrayBuffer);\r\n//uploading to cloudinary\r\nconst uploadResponse : UploadApiResponse | undefined = await new Promise((resolve, reject) => {\r\n    const uploadStream = cloudinary.uploader.upload_stream(\r\n        {resource_type: 'auto'},\r\n        (error, result) => {\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve(result);\r\n            }\r\n        }\r\n    );\r\n    uploadStream.end(buffer);\r\n})\r\n\r\nconst imageUrl = uploadResponse?.secure_url;\r\nif (!imageUrl) {\r\n    console.log(\"Image upload failed\");\r\n    return {\r\n        errors:{\r\n            ftdImg: ['Failed to upload image. Please try again.']\r\n        }\r\n    }\r\n}\r\n\r\ntry {\r\n    await prisma.article.create({\r\n        data:{\r\n            title:result.data.title,\r\n            category:result.data.category,\r\n            content:result.data.content,\r\n            featuredImage:imageUrl,\r\n            authorId:existingUser.id,\r\n        }   \r\n    });\r\n    console.log(\"Article stored in database successfully\");\r\n} catch (error:unknown) {\r\n    if(error instanceof Error) {\r\n        console.error(\"Database error:\", error);\r\n        return {\r\n            errors:{\r\n                formErrors:[error.message]\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            errors:{\r\n                formErrors:['Some internal server error occured.']\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n  revalidatePath(\"/dashboard\"); //refreshes and updates the data\r\n  redirect(\"/dashboard\");\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}