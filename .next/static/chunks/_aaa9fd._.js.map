{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border border-zinc-200 bg-white text-zinc-950 shadow dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2HACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4CAA4C;QACzD,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-zinc-200 bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,odACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/actions/edit-article.ts"],"sourcesContent":["\"use server\"; //directive\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { z } from \"zod\";\r\nimport { v2 as cloudinary, UploadApiResponse } from \"cloudinary\";\r\nimport { prisma } from \"@/lib/prisma\";\r\n\r\n//declaring the configurations from env\r\ncloudinary.config({\r\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n  api_key: process.env.CLOUDINARY_API_KEY,\r\n  api_secret: process.env.CLOUDINARY_API_SECRET,\r\n});\r\n//schema for the articles using Zod\r\nconst createArticleSchema = z.object({\r\n  title: z.string().min(3).max(100),\r\n  category: z.string().min(3).max(50),\r\n  content: z.string().min(10),\r\n});\r\n//type-making the articles\r\ntype CreateArticlesFormState = {\r\n  errors: {\r\n    title?: string[];\r\n    category?: string[];\r\n    ftdImg?: string[];\r\n    content?: string[];\r\n    formErrors?: string[];\r\n  };\r\n};\r\n\r\nexport const editArticle = async (\r\n  articleId: string,\r\n  prevState: CreateArticlesFormState,\r\n  formData: FormData\r\n): Promise<CreateArticlesFormState> => {\r\n  const result = createArticleSchema.safeParse({\r\n    title: formData.get(\"title\"),\r\n    category: formData.get(\"category\"),\r\n    content: formData.get(\"content\"),\r\n  });\r\n\r\n  if (!result.success) {\r\n    console.log(\"Validation failed:\", result.error.flatten().fieldErrors);\r\n    return {\r\n      errors: result.error.flatten().fieldErrors,\r\n    };\r\n  }\r\n\r\n  const { userId } = await auth();\r\n  if (!userId) {\r\n    console.log(\"User authentication failed\");\r\n    return {\r\n      errors: {\r\n        formErrors: [\"You have to login first\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  //finding if the article exists\r\n  const existingArticle = await prisma.article.findUnique({\r\n    where: { id: articleId },\r\n  });\r\n  if (!existingArticle) {\r\n    return {\r\n      errors: { formErrors: [\"Article Not Found\"] },\r\n    };\r\n  }\r\n\r\n  //checking if the user exists who is creating\r\n  const existingUser = await prisma.user.findUnique({\r\n    where: { clerkUserId: userId },\r\n  });\r\n  if (!existingUser || existingArticle.authorId !== existingUser.id) {\r\n    return {\r\n      errors: {\r\n        formErrors: [\"User not found. Please register first.\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  //editing article finally\r\n\r\n  let imageUrl = existingArticle?.featuredImage;\r\n\r\n  //image validation\r\n  const imageFile = formData.get(\"ftdImg\") as File | null;\r\n  if (imageFile && imageFile.name !== \"undefined\") {\r\n    try {\r\n      //converting img to a buffer\r\n      const arrayBuffer = await imageFile.arrayBuffer();\r\n      const buffer = Buffer.from(arrayBuffer);\r\n      //uploading to cloudinary\r\n      const uploadResponse: UploadApiResponse | undefined = await new Promise(\r\n        (resolve, reject) => {\r\n          const uploadStream = cloudinary.uploader.upload_stream(\r\n            { resource_type: \"auto\" },\r\n            (error, result) => {\r\n              if (error) {\r\n                reject(error);\r\n              } else {\r\n                resolve(result);\r\n              }\r\n            }\r\n          );\r\n          uploadStream.end(buffer);\r\n        }\r\n      );\r\n      if (uploadResponse?.secure_url) {\r\n        imageUrl = uploadResponse.secure_url;\r\n      } else {\r\n        return {\r\n          errors: {\r\n            ftdImg: [\"Failed to upload image.\"],\r\n          },\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        errors: {\r\n          formErrors: [\"Error uploading image\"],\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  if (!imageUrl) {\r\n    console.log(\"Image upload failed\");\r\n    return {\r\n      errors: {\r\n        ftdImg: [\"Failed to upload image. Please try again.\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    await prisma.article.update({\r\n      where: { id: articleId },\r\n      data: {\r\n        title: result.data.title,\r\n        category: result.data.category,\r\n        content: result.data.content,\r\n        featuredImage: imageUrl,\r\n      },\r\n    });\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      console.error(\"Database error:\", error);\r\n      return {\r\n        errors: {\r\n          formErrors: [error.message],\r\n        },\r\n      };\r\n    } else {\r\n      return {\r\n        errors: {\r\n          formErrors: [\"Some internal server error occured.\"],\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  revalidatePath(\"/dashboard\"); //refreshes and updates the data\r\n  redirect(\"/dashboard\");\r\n};\r\n"],"names":[],"mappings":";;;;;IA+Ba"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/components/articles/edit-article-page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, {\r\n  FormEvent,\r\n  startTransition,\r\n  useActionState,\r\n  useState,\r\n} from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { Button } from \"../ui/button\";\r\nimport \"react-quill-new/dist/quill.snow.css\";\r\nimport { Article } from \"@prisma/client\";\r\nimport { editArticle } from \"@/actions/edit-article\";\r\n\r\nconst ReactQuill = dynamic(() => import(\"react-quill-new\"), { ssr: false });\r\n\r\ntype EditArticleProps = {\r\n  article: Article;\r\n};\r\n\r\nconst EditArticlePage: React.FC<EditArticleProps> = ({ article }) => {\r\n  const [content, setContent] = useState(article.content);\r\n  const [formState, action, isPending] = useActionState(editArticle.bind(null, article.id), {\r\n    errors: {},\r\n  });\r\n\r\n  //to send the written content data\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.currentTarget);\r\n    formData.append(\"content\", content);\r\n    startTransition(() => {\r\n      action(formData);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle> Create New Article </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                defaultValue={article.title}\r\n                placeholder=\"Enter an article title\"\r\n              />\r\n              {formState.errors.title && (\r\n                <span className=\"text-red-600 text-sm\">\r\n                  {\" \"}\r\n                  {formState.errors.title}{\" \"}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label> Category </Label>\r\n              <select\r\n                className=\"flex h-10 w-full rounded-md\"\r\n                name=\"category\"\r\n                defaultValue={article.category}\r\n                id=\"category\"\r\n              >\r\n                <option value=\"others\"> Select Category </option>\r\n                <option value=\"technology\"> Technology </option>\r\n                <option value=\"programming\"> Programming </option>\r\n                <option value=\"web-development\"> Web Development </option>\r\n              </select>\r\n              {formState.errors.category && (\r\n                <span className=\"text-red-600 text-sm\">\r\n                  {\" \"}\r\n                  {formState.errors.category}{\" \"}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"ftdImg\"> Featured Image </Label>\r\n              <Input type=\"file\" id=\"ftd-img\" name=\"ftdImg\" accept=\"image/*\" />\r\n              <div className=\"mb-4\">\r\n                {article.featuredImage && (\r\n                  <img\r\n                    src={article.featuredImage}\r\n                    alt=\"ftd-img\"\r\n                    className=\"w-48 h-32 object-cover rounded-md\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label> Content </Label>\r\n              <ReactQuill theme=\"snow\" value={content} onChange={setContent} />\r\n              {formState.errors.content && (\r\n                <span className=\"text-red-600 text-sm\">\r\n                  {\" \"}\r\n                  {formState.errors.content[0]}{\" \"}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"flex justify-end gap-4\">\r\n              <Button variant={\"outline\"}> Cancel </Button>\r\n              <Button type=\"submit\" disabled={isPending}>\r\n                {isPending ? \"Loading...\" : \"Edit Article\"}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditArticlePage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Documents/MERN/blogApp/node_modules/%40radix-ui/react-label/src/label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AAenB;AAdJ,SAAS,iBAAiB;;;;;AAM1B,IAAM,OAAO;AAMb,IAAM,QAAc,8JAAA,UAAA,CAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,2KAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}